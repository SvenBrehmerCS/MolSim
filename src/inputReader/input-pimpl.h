// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX___RES_INPUT_PIMPL_H
#define CXX___RES_INPUT_PIMPL_H

#include "input-pskel.h"

class sim_t_pimpl : public virtual sim_t_pskel {
public:
    virtual void pre();

    virtual void output();

    virtual void param();

    virtual void particle();

    virtual void cuboid();

    virtual void post_sim_t();
};

class output_t_pimpl : public virtual output_t_pskel {
public:
    virtual void pre();

    virtual void name(const ::std::string&);

    virtual void frequency(int);

    virtual void post_output_t();
};

class param_t_pimpl : public virtual param_t_pskel {
public:
    virtual void pre();

    virtual void t_end(double);

    virtual void delta_t(double);

    virtual void post_param_t();
};

class particle_t_pimpl : public virtual particle_t_pskel {
public:
    virtual void pre();

    virtual void pos_x(double);

    virtual void pos_y(double);

    virtual void pos_z(double);

    virtual void vel_x(double);

    virtual void vel_y(double);

    virtual void vel_z(double);

    virtual void m(double);

    virtual void post_particle_t();
};

class cuboid_t_pimpl : public virtual cuboid_t_pskel {
public:
    virtual void pre();

    virtual void pos_x(double);

    virtual void pos_y(double);

    virtual void pos_z(double);

    virtual void vel_x(double);

    virtual void vel_y(double);

    virtual void vel_z(double);

    virtual void m(double);

    virtual void n_x(int);

    virtual void n_y(int);

    virtual void n_z(int);

    virtual void h(double);

    virtual void b_motion(double);

    virtual void post_cuboid_t();
};

#endif // CXX___RES_INPUT_PIMPL_H
