// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "input-pimpl.h"

// sim_t_pimpl
//

void sim_t_pimpl::pre() { }

void sim_t_pimpl::output() { }

void sim_t_pimpl::param() { }

void sim_t_pimpl::particle() { }

void sim_t_pimpl::cuboid() { }

void sim_t_pimpl::post_sim_t() { }

// output_t_pimpl
//

void output_t_pimpl::pre() { }

void output_t_pimpl::name(const ::std::string& name) {
    // TODO
    //
}

void output_t_pimpl::frequency(int frequency) {
    // TODO
    //
}

void output_t_pimpl::post_output_t() { }

// param_t_pimpl
//

void param_t_pimpl::pre() { }

void param_t_pimpl::t_end(double t_end) {
    // TODO
    //
}

void param_t_pimpl::delta_t(double delta_t) {
    // TODO
    //
}

void param_t_pimpl::post_param_t() { }

// particle_t_pimpl
//

void particle_t_pimpl::pre() { }

void particle_t_pimpl::pos_x(double pos_x) {
    // TODO
    //
}

void particle_t_pimpl::pos_y(double pos_y) {
    // TODO
    //
}

void particle_t_pimpl::pos_z(double pos_z) {
    // TODO
    //
}

void particle_t_pimpl::vel_x(double vel_x) {
    // TODO
    //
}

void particle_t_pimpl::vel_y(double vel_y) {
    // TODO
    //
}

void particle_t_pimpl::vel_z(double vel_z) {
    // TODO
    //
}

void particle_t_pimpl::m(double m) {
    // TODO
    //
}

void particle_t_pimpl::post_particle_t() { }

// cuboid_t_pimpl
//

void cuboid_t_pimpl::pre() { }

void cuboid_t_pimpl::pos_x(double pos_x) {
    // TODO
    //
}

void cuboid_t_pimpl::pos_y(double pos_y) {
    // TODO
    //
}

void cuboid_t_pimpl::pos_z(double pos_z) {
    // TODO
    //
}

void cuboid_t_pimpl::vel_x(double vel_x) {
    // TODO
    //
}

void cuboid_t_pimpl::vel_y(double vel_y) {
    // TODO
    //
}

void cuboid_t_pimpl::vel_z(double vel_z) {
    // TODO
    //
}

void cuboid_t_pimpl::m(double m) {
    // TODO
    //
}

void cuboid_t_pimpl::n_x(int n_x) {
    // TODO
    //
}

void cuboid_t_pimpl::n_y(int n_y) {
    // TODO
    //
}

void cuboid_t_pimpl::n_z(int n_z) {
    // TODO
    //
}

void cuboid_t_pimpl::h(double h) {
    // TODO
    //
}

void cuboid_t_pimpl::b_motion(double b_motion) {
    // TODO
    //
}

void cuboid_t_pimpl::post_cuboid_t() { }
